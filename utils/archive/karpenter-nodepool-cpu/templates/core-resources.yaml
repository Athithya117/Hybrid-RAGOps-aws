apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name | default (printf "%s-sa" .Release.Name) }}
  namespace: {{ include "onnx.namespace" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rag8s-grafana-test
  namespace: inference
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-role
  namespace: {{ include "onnx.namespace" . }}
rules:
  - apiGroups: [""]
    resources: ["pods","services","endpoints","configmaps","secrets"]
    verbs: ["get","list","watch","create","update","patch"]
  - apiGroups: ["apps"]
    resources: ["deployments","statefulsets"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-rolebinding
  namespace: {{ include "onnx.namespace" . }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount.name | default (printf "%s-sa" .Release.Name) }}
    namespace: {{ include "onnx.namespace" . }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ include "onnx.namespace" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: rag8s
spec:
  type: {{ .Values.service.type | default "ClusterIP" }}
  ports:
    - name: http
      port: {{ .Values.service.httpPort | default 8000 }}
      targetPort: http
    - name: grpc
      port: {{ .Values.service.grpcPort | default 9000 }}
      targetPort: grpc
    - name: metrics
      port: {{ .Values.service.metricsPort | default 8080 }}
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    ray.io/serve: "true"
---
{{- if and (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1") .Values.prometheus.enabled .Values.prometheus.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ .Release.Name }}-sm
  namespace: {{ .Values.network.prometheusNamespace | default "monitoring" }}
  labels:
    release: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  namespaceSelector:
    matchNames:
      - {{ include "onnx.namespace" . }}
  endpoints:
    - port: metrics
      path: /metrics
      interval: {{ .Values.prometheus.serviceMonitor.interval | default "15s" }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-netpol
  namespace: {{ include "onnx.namespace" . }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}
        - namespaceSelector:
            matchNames:
              - {{ .Values.network.prometheusNamespace | default "monitoring" | quote }}
  egress:
    - to:
        - podSelector: {}
    - to:
        - namespaceSelector:
            matchNames:
              - kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-datasources
  namespace: {{ include "onnx.namespace" . }}
  labels:
    grafana_datasource: "1"
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.{{ .Values.network.prometheusNamespace | default "monitoring" }}.svc.cluster.local
        isDefault: true
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo.{{ .Values.network.prometheusNamespace | default "monitoring" }}.svc.cluster.local
        isDefault: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-dashboard-indexing
  namespace: {{ include "onnx.namespace" . }}
  labels:
    grafana_dashboard: "1"
data:
  dashboard.json: |
    {"uid":"rag8s-indexing","title":"RAG8s Indexing & Inference Overview","panels":[]}
